apiVersion: apps/v1
kind: DaemonSet
metadata:
  labels:
    {{- include "oomkill-monitor.labels" . | nindent 4 }}
  name: {{ .Chart.Name }}
spec:
  revisionHistoryLimit: 3
  selector:
    matchLabels:
      {{- include "oomkill-monitor.selectorLabels" . | nindent 6 }}
  template:
    metadata:
      {{- with .Values.podAnnotations }}
      annotations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      labels:
        {{- include "oomkill-monitor.labels" . | nindent 8 }}
    spec:
      {{- with .Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      containers:
      - env:
          - name: DOCKER
        {{- if .Values.useDocker}}
            value: "true"
        {{- else }}
            value: "false"
        {{- end }}
          - name: CONTAINERD
        {{- if .Values.useContainerd}}
            value: "true"
        {{- else }}
            value: "false"
        {{- end }}
        image: {{ .Values.image.repository }}:{{ .Values.image.tag }}
        imagePullPolicy: {{ .Values.imagePullPolicy }}
        name: {{ .Chart.Name }}
        ports:
        - containerPort: {{ .Values.service.port }}
          name: http
          protocol: TCP
        resources: {}
        securityContext:
          {{- toYaml .Values.securityContext | nindent 12 }}
        terminationMessagePath: /dev/termination-log
        terminationMessagePolicy: File
        volumeMounts:
        {{- if .Values.useDocker}}
        - name: dockersock
          mountPath: /var/run/docker.sock
        {{- end }}
        {{- if .Values.useContainerd}}
        - name: containerdsock
          mountPath: /run/containerd/containerd.sock
        {{- end}}
      dnsPolicy: ClusterFirst
      {{- if .Values.nodeSelector }}
      nodeSelector:
      {{ toYaml .Values.nodeSelector | indent 2 }}
      {{- end }}
      restartPolicy: Always
      schedulerName: default-scheduler
      securityContext: {}
      terminationGracePeriodSeconds: 30
      {{- with .Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
        {{- end }}
      volumes:
      {{- if .Values.useDocker}}
      - name: dockersock
        hostPath:
          path: /var/run/docker.sock
      {{- end }}
      {{- if .Values.useContainerd}}
      - name: containerdsock
        hostPath:
          path: /run/containerd/containerd.sock
      {{- end }}
  updateStrategy:
    rollingUpdate:
      maxUnavailable: 1
    type: RollingUpdate