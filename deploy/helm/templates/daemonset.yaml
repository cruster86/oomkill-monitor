apiVersion: apps/v1
kind: DaemonSet
metadata:
  labels:
    {{- include "oomkill-monitor.labels" . | nindent 4 }}
  name: {{ .Chart.Name }}
spec:
  revisionHistoryLimit: 3
  selector:
    matchLabels:
      {{- include "oomkill-monitor.selectorLabels" . | nindent 4 }}
  template:
    metadata:
      labels:
        {{- include "oomkill-monitor.labels" . | nindent 4 }}
    spec:
      {{- with .Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      containers:
      - env:
        - name: DOCKER
          value: "true"
        - name: CONTAINERD
          value: "false"
        image: {{ .Values.image.repository }}:{{ .Values.image.tag }}
        imagePullPolicy: {{ .Values.imagePullPolicy }}
        name: {{ .Chart.Name }}
        ports:
        - containerPort: {{ .Values.service.port }}
          name: http
          protocol: TCP
        resources: {}
        securityContext: {}
        terminationMessagePath: /dev/termination-log
        terminationMessagePolicy: File
        volumeMounts:
        - mountPath: /var/run/docker.sock
          name: dockersock
      dnsPolicy: ClusterFirst
      {{- if .Values.nodeSelector }}
      nodeSelector:
      {{ toYaml .Values.nodeSelector | indent 8 }}
      {{- end }}
      restartPolicy: Always
      schedulerName: default-scheduler
      securityContext: {}
      terminationGracePeriodSeconds: 30
      {{- with .Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
        {{- end }}
      volumes:
      - hostPath:
          path: /var/run/docker.sock
          type: ""
        name: dockersock
  updateStrategy:
    rollingUpdate:
      maxUnavailable: 1
    type: RollingUpdate

